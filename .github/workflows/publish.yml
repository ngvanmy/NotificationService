name: publish to nuget
on:
  push:
    branches:
      - master
jobs:
  publish:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - uses: NuGet/setup-nuget@v1
      # - uses: actions/setup-dotnet@v3
      #   with:
      #     dotnet-version: '8.0.x'

      - name: read common.props
        id: commonProps
        uses: juliangruber/read-file-action@v1
        with:
          path: ./common.props

      - name: get version
        id: getVersion
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: '(?<=>)[^<>]+(?=</Version>)'
          regex_flags: 'gim'
          search_string: '${{ steps.commonProps.outputs.content }}'

      - name: dotnet restore
        run: dotnet restore -s "https://api.nuget.org/v3/index.json"

      - name: dotnet build
        run: dotnet build -c Release
      
      # - name: dotnet test
      #   run: dotnet test -c Release --no-restore --no-build

     
      # - name: remove unused packages
      #   run: |
      #     cd ./nugetPackages
      #     # rm -fo !(EasyAbp.*)
      #     powershell -Command "rm -fo *.nupkg"
      #     # rm -fo *.Blazor.Host.*
      #     # rm -fo *.Blazor.Server.Host.*
      #     # rm -fo *.Host.Shared.*
      #     # rm -fo *.HttpApi.Host.*
      #     # rm -fo *.IdentityServer.*
      #     # rm -fo *.AuthServer.*
      #     # rm -fo *.Web.Host.*
      #     # rm -fo *.Web.Unified.*
      #     # rm -fo *.HttpApi.Client.ConsoleTestApp.*
      #     # rm -fo *.Tests.*
      #     # rm -fo *.TestBase.*
      #     ls
      - name: dotnet pack
        run: dotnet pack -c Release --no-build --output ./nugetPackages

      - name: dotnet nuget push to NuGet
        run:  |
          cd ./nugetPackages
          dotnet nuget push *.nupkg -s https://nuget.itquynhon.net/nuget -k "761bbededb5e41f1b1bd22e676f5821b"  --skip-duplicate